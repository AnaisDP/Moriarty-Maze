/*!
 * Bootstrap v3.3.6 (http://getbootstrap.com)
 * Copyright 2011-2015 Twitter, Inc.
 * Licensed under the MIT license
 */

if("undefined"==typeof jQuery) throw new Error("Bootstrap's JavaScript requires jQuery");
+function(a) {
"use strict";
var b=a.fn.jquery.split(" ") [0].split(".");
if(b[0]a?void 0:this.sliding?this.$element.one("slid.bs.carousel",
function() {
b.to(a) 
}
}

,
c.prototype.pause=function(b) {
return b||(this.paused=!0) ,
this.$element.find(".next,
.prev") .length&&a.support.transition&&(this.$element.trigger(a.support.transition.end) ,
this.cycle(!0) ),
this.interval=clearInterval(this.interval) ,
this
}

,
c.prototype.next=function() {
    return this.sliding?void 0: this.slide("next");
}

,
c.prototype.prev=function() {
    return this.sliding?void 0: this.slide("prev");
}

,
c.prototype.slide=function(b,
d) {
var e=this.$element.find(".item.active") ,
f=d||this.getItemForDirection(b,
e) ,
g=this.interval,
h="next"==b?"left":"right",
i=this;
if(f.hasClass("active") )return this.sliding=!1;
var j=f[0],
k=a.Event("slide.bs.carousel",
 {
    relatedTarget: j,direction;
}

);
if(this.$element.trigger(k) ,
!k.isDefaultPrevented() ) {
if(this.sliding=!0,
g&&this.pause() ,
this.$indicators.length) {
this.$indicators.find(".active") .removeClass("active");
var l=a(this.$indicators.children() [this.getItemIndex(f) ]);
l&&l.addClass("active") 
}

var m=a.Event("slid.bs.carousel",
 {
    relatedTarget: j,direction;
}

);
return a.support.transition&&this.$element.hasClass("slide") ?(f.addClass(b) ,
f[0].offsetWidth,
e.addClass(h) ,
f.addClass(h) ,
e.one("bsTransitionEnd",
function() {
f.removeClass([b,
h].join(" ") ).addClass("active") ,
e.removeClass(["active",
h].join(" ") ),
i.sliding=!1,
setTimeout(function() {
i.$element.trigger(m) 
}
}

;
var d=a.fn.carousel;
a.fn.carousel=b,
a.fn.carousel.Constructor=c,
a.fn.carousel.noConflict=function() {
return a.fn.carousel=d,
this
}

;
var e=function(c) {
var d,
e=a(this) ,
f=a(e.attr("data-target") ||(d=e.attr("href") ) &&d.replace(/.*(?=#[^\s]+$) /,
"") );
if(f.hasClass("carousel") ) {
var g=a.extend( {
}
}

;
a(document) .on("click.bs.carousel.data-api","[data-slide]",
e) .on("click.bs.carousel.data-api","[data-slide-to]",
e) ,
a(window) .on("load",
function() {
a('[data-ride="carousel"]') .each(function() {
var c=a(this);
b.call(c,
c.data() )
}
}

(jQuery) ,
+function(a) {
"use strict";
function b(b) {
var c,
d=b.attr("data-target") ||(c=b.attr("href") ) &&c.replace(/.*(?=#[^\s]+$) /,
"");
return a(d) 
}

function c(b) {
return this.each(function() {
var c=a(this) ,
e=c.data("bs.collapse") ,
f=a.extend( {
}
}

var d=function(b,
c) {
this.$element=a(b) ,
this.options=a.extend( {
}
}

;
d.VERSION="3.3.6",
d.TRANSITION_DURATION=350,
d.DEFAULTS= {
    toggle: !0;
}

,
d.prototype.dimension=function() {
var a=this.$element.hasClass("width");
return a?"width":"height"
}

,
d.prototype.show=function() {
if(!this.transitioning&&!this.$element.hasClass("in") ) {
var b,
e=this.$parent&&this.$parent.children(".panel") .children(".in,
.collapsing");
if(!(e&&e.length&&(b=e.data("bs.collapse") ,
b&&b.transitioning) )) {
var f=a.Event("show.bs.collapse");
if(this.$element.trigger(f) ,
!f.isDefaultPrevented() ) {
e&&e.length&&(c.call(e,
"hide") ,
b||e.data("bs.collapse",
null) );
var g=this.dimension();
this.$element.removeClass("collapse") .addClass("collapsing") [g](0) .attr("aria-expanded",
!0) ,
this.$trigger.removeClass("collapsed") .attr("aria-expanded",
!0) ,
this.transitioning=1;
var h=function() {
this.$element.removeClass("collapsing") .addClass("collapse in") [g]("") ,
this.transitioning=0,
this.$element.trigger("shown.bs.collapse") 
}
}

,
d.prototype.hide=function() {
if(!this.transitioning&&this.$element.hasClass("in") ) {
var b=a.Event("hide.bs.collapse");
if(this.$element.trigger(b) ,
!b.isDefaultPrevented() ) {
var c=this.dimension();
this.$element[c](this.$element[c]() )[0].offsetHeight,
this.$element.addClass("collapsing") .removeClass("collapse in") .attr("aria-expanded",
!1) ,
this.$trigger.addClass("collapsed") .attr("aria-expanded",
!1) ,
this.transitioning=1;
var e=function() {
this.transitioning=0,
this.$element.removeClass("collapsing") .addClass("collapse") .trigger("hidden.bs.collapse") 
}
}

,
d.prototype.toggle=function() {
this[this.$element.hasClass("in") ?"hide":"show"]() 
}

,
d.prototype.getParent=function() {
return a(this.options.parent) .find('[data-toggle="collapse"][data-parent="'+this.options.parent+'"]') .each(a.proxy(function(c,
d) {
var e=a(d);
this.addAriaAndCollapsedClass(b(e) ,
e) 
}
}

,
d.prototype.addAriaAndCollapsedClass=function(a,
b) {
var c=a.hasClass("in");
a.attr("aria-expanded",
c) ,
b.toggleClass("collapsed",
!c) .attr("aria-expanded",
c) 
}

;
var e=a.fn.collapse;
a.fn.collapse=c,
a.fn.collapse.Constructor=d,
a.fn.collapse.noConflict=function() {
return a.fn.collapse=e,
this
}

,
a(document) .on("click.bs.collapse.data-api",
'[data-toggle="collapse"]',
function(d) {
var e=a(this);
e.attr("data-target") ||d.preventDefault();
c.call(f,
h) 
    var f=b(e), g=f.data("bs.collapse"), h=g?"toggle": e.data();
}
}

(jQuery) ,
+function(a) {
"use strict";
function b(b) {
var c=b.attr("data-target");
c||(c=b.attr("href") ,
c=c&&/#[A-Za-z]/.test(c) &&c.replace(/.*(?=#[^\s]*$) /,
"") );
var d=c&&a(c);
    return d&&d.length?d: b.parent();
}

function c(c) {
c&&3===c.which||(a(e) .remove() ,
a(f) .each(function() {
var d=a(this) ,
e=b(d) ,
f= {
    relatedTarget: this;
}
}

function d(b) {
return this.each(function() {
var c=a(this) ,
d=c.data("bs.dropdown");
d||c.data("bs.dropdown",
d=new g(this) ),
"string"==typeof b&&d[b].call(c) 
}
}

var e=".dropdown-backdrop",
f='[data-toggle="dropdown"]',
g=function(b) {
a(b) .on("click.bs.dropdown",
this.toggle) 
}

;
g.VERSION="3.3.6",
g.prototype.toggle=function(d) {
var e=a(this);
if(!e.is(".disabled,
:disabled") ) {
var f=b(e) ,
g=f.hasClass("open");
if(c() ,
!g) {
"ontouchstart"in document.documentElement&&!f.closest(".navbar-nav") .length&&a(document.createElement("div") ).addClass("dropdown-backdrop") .insertAfter(a(this) ).on("click",
c);
var h= {
    relatedTarget: this;
}
}

,
g.prototype.keydown=function(c) {
if(/(38|40|27|32) /.test(c.which) &&!/input|textarea/i.test(c.target.tagName) ) {
var d=a(this);
if(c.preventDefault() ,
c.stopPropagation() ,
!d.is(".disabled,
:disabled") ) {
var e=b(d) ,
g=e.hasClass("open");
if(!g&&27!=c.which||g&&27==c.which) return 27==c.which&&e.find(f) .trigger("focus") ,
d.trigger("click");
if(i.length) {
var j=i.index(c.target);
38==c.which&&j > 0&&j--,
40==c.which&&jdocument.documentElement.clientHeight;
this.$element.css( {
    var h=" li:not(.disabled): visible a",i=e.find(".dropdown-menu"+h);
    paddingLeft: !this.bodyIsOverflowing&&a?this.scrollbarWidth;
}
}

,
c.prototype.resetAdjustments=function() {
this.$element.css( {
    paddingLeft: "",paddingRight;
}
}

,
c.prototype.checkScrollbar=function() {
var a=window.innerWidth;
if(!a) {
var b=document.documentElement.getBoundingClientRect();
a=b.right-Math.abs(b.left) 
}
}

,
c.prototype.getPinnedOffset=function() {
if(this.pinnedOffset) return this.pinnedOffset;
this.$element.removeClass(c.RESET) .addClass("affix");
var a=this.$target.scrollTop() ,
b=this.$element.offset();
return this.pinnedOffset=b.top-a
}

,
c.prototype.checkPositionWithEventLoop=function() {
setTimeout(a.proxy(this.checkPosition,
this) ,
1) 
}

,
c.prototype.checkPosition=function() {
if(this.$element.is(":visible") ) {
var b=this.$element.height() ,
d=this.options.offset,
e=d.top,
f=d.bottom,
g=Math.max(a(document) .height() ,
a(document.body) .height() );
"object"!=typeof d&&(f=e=d) ,
"function"==typeof e&&(e=d.top(this.$element) ),
"function"==typeof f&&(f=d.bottom(this.$element) );
var h=this.getState(g,
b,
e,
f);
if(this.affixed!=h) {
null!=this.unpin&&this.$element.css("top",
"");
if(this.$element.trigger(j) ,
j.isDefaultPrevented() )return;
    var i="affix"+(h?"-"+h: ""), j=a.Event(i+".bs.affix");
    this.affixed=h,this.unpin="bottom"==h?this.getPinnedOffset(): null,this.$element.removeClass(c.RESET) .addClass(i) .trigger(i.replace("affix","affixed") +".bs.affix");
}

"bottom"==h&&this.$element.offset( {
    top: g-b-f;
}
}


}

;
var d=a.fn.affix;
a.fn.affix=b,
a.fn.affix.Constructor=c,
a.fn.affix.noConflict=function() {
return a.fn.affix=d,
this
}

,
a(window) .on("load",
function() {
a('[data-spy="affix"]') .each(function() {
var c=a(this) ,
d=c.data();
d.offset=d.offset|| {
}

,
null!=d.offsetBottom&&(d.offset.bottom=d.offsetBottom) ,
null!=d.offsetTop&&(d.offset.top=d.offsetTop) ,
b.call(c,
d) 
}
}

(jQuery);